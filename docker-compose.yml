services:
  database:
    container_name: PostgreSQL
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data

  redis_cache:
    container_name: RedisCache
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always
    env_file:
      - .env
    volumes:
      - redis:/data
    command: redis-server --port 6379

  redis_celery:
    container_name: RedisCelery
    image: redis:latest
    ports:
      - "6378:6378"
    restart: always
    env_file:
      - .env
    volumes:
      - redis:/data
    command: redis-server --port 6380
    
  backend:
    container_name: Django
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
        redis_cache:
          condition: service_started
        redis_celery:
          condition: service_started
        database:
          condition: service_started
    command: /backend/entrypoint.sh
    env_file:
      - .env
    volumes:
      - ./backend:/backend

  frontend:
    container_name: React
    build: ./frontend
    ports:
     - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules

volumes:
  redis:
    driver: local

  database:
    driver: local
